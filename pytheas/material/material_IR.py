from scipy.interpolate import interp1d
import numpy as np


def epsilon_IR(material, wavelength):

    if material == 'Si':
        lambn = np.array([
            1.12, 1.144, 1.2, 1.372, 1.4, 1.532, 1.6, 1.696, 1.8, 2., 2.4373,
            2.5, 2.7144, 3., 3.3033, 3.4188, 3.5, 4., 5., 6., 7., 8., 9., 10.,
            13.5, 14.5, 15., 20., 25., 30.3, 50.
        ])*1e-6
        n = np.array([
            3.5361, 3.5295, 3.5193, 3.5007, 3.4876, 3.4784, 3.471, 3.4644,
            3.4578, 3.449, 3.4434, 3.4424, 3.4393, 3.4361, 3.4335, 3.4327,
            3.4321, 3.4294, 3.4261, 3.4242, 3.4231, 3.4224, 3.4219, 3.4215,
            3.4209, 3.4208, 3.4207, 3.4204, 3.4201, 3.42, 3.4197
        ])
        lambk = np.array([
            2.7144, 3.8, 5., 5.128, 5.263, 5.405, 5.556, 5.714, 5.882, 6.061,
            6.25, 6.452, 6.667, 6.897, 7.143, 7.143, 7.407, 7.692, 7.692, 8.,
            8.333, 8.889, 8.929, 9.009, 9.091, 9.091, 9.259, 9.434, 9.615,
            9.804, 10., 10.2, 10.31, 10.42, 10.53, 10.64, 10.87, 11.11, 11.24,
            11.36, 11.49, 11.63, 11.76, 11.9, 12.05, 12.2, 12.35, 12.5, 12.66,
            12.82, 12.99, 13.16, 13.33, 13.51, 13.7, 13.89, 14.08, 14.29,
            14.49, 14.71, 14.93, 15.15, 15.38, 15.63, 15.87, 16.13, 16.39,
            16.5, 16.67, 16.95, 17.24, 17.54, 17.86, 18.52, 19.23, 20., 20.83,
            21.74, 22.73, 23.81, 25., 25.64, 26.32, 27.03, 27.78, 29.41
        ])*1e-6
        fn = interp1d(lambn, n)
        k = np.array([
            2.50000000e-09, 1.30000000e-08, 1.99000000e-07, 2.82000000e-07,
            2.97000000e-07, 3.26000000e-07, 3.94000000e-07, 4.05000000e-07,
            4.17000000e-07, 5.64000000e-07, 8.46000000e-07, 1.74000000e-06,
            2.66000000e-06, 2.45000000e-05, 1.68000000e-05, 1.87000000e-05,
            1.62000000e-05, 2.49000000e-05, 2.82000000e-05, 1.53000000e-05,
            2.41000000e-05, 6.44000000e-05, 8.38000000e-05, 8.46000000e-05,
            5.49000000e-05, 7.38000000e-05, 4.72000000e-05, 3.75000000e-05,
            3.67000000e-05, 4.84000000e-05, 6.76000000e-05, 1.09000000e-04,
            1.22000000e-04, 1.24000000e-04, 1.22000000e-04, 1.27000000e-04,
            1.66000000e-04, 2.02000000e-04, 2.08000000e-04, 2.02000000e-04,
            2.01000000e-04, 1.73000000e-04, 1.53000000e-04, 1.44000000e-04,
            1.77000000e-04, 2.06000000e-04, 1.97000000e-04, 1.77000000e-04,
            2.07000000e-04, 2.14000000e-04, 2.27000000e-04, 2.39000000e-04,
            2.59000000e-04, 3.12000000e-04, 3.03000000e-04, 2.21000000e-04,
            1.57000000e-04, 1.02000000e-04, 1.12000000e-04, 1.25000000e-04,
            1.24000000e-04, 1.41000000e-04, 1.52000000e-04, 1.64000000e-04,
            5.05000000e-04, 9.63000000e-04, 1.11000000e-03, 1.25000000e-03,
            7.16000000e-04, 4.18000000e-04, 3.65000000e-04, 4.15000000e-04,
            3.84000000e-04, 3.40000000e-04, 3.18000000e-04, 2.86000000e-04,
            2.22000000e-04, 1.56000000e-04, 1.27000000e-04, 1.06000000e-04,
            9.15000000e-05, 9.39000000e-05, 1.05000000e-04, 1.12000000e-04,
            1.08000000e-04, 1.08000000e-04
        ])
        fk = interp1d(lambk, k)

    elif material == 'a-Si':
        lambn = np.array([
            6.489, 7.079, 7.740, 8.389, 8.748, 9.655, 10.47, 11.21, 12.29,
            12.95, 14.10, 15.7, 16.73, 17.95, 20.83, 23.73, 27.57
        ])*1e-6
        n = np.array([
            3.79, 3.78, 3.77, 3.75, 3.72, 3.71, 3.74, 3.75, 3.75, 3.73, 3.73,
            3.73, 3.67, 3.62, 3.62, 3.62, 3.68
        ])
        fn = interp1d(lambn, n)
        lambk = np.array([
            2.196, 15.37, 16.73, 17.29, 17.72, 18.21, 18.46, 18.72, 18.92,
            19.15, 19.31, 19.54, 19.63, 19.8, 10.14, 20.4, 20.95, 21.58, 21.92,
            22.42, 23.03, 24.75, 26.98
        ])*1e-6
        k = np.array([
            0.285, 0.0672, 0.283, 0.443, 0.698, 1.06, 1.49, 1.90, 2.27, 2.68,
            3.09, 3.46, 3.92, 4.21, 4.85, 5.37, 5.94, 5.76, 5.47, 5.2, 5.02,
            4.91, 5.03
        ]) * 1e-2
        fk = interp1d(lambk, k)

    elif material == 'Ge':
        lambn = np.array([
            2.0, 8.0, 8.2, 8.23, 8.4, 8.6, 8.8, 9.0, 9.2, 9.4, 9.6, 9.8, 10.0,
            10.5, 11.0, 11.5, 12.0, 12.5, 13.0, 13.5, 14.0, 14.5
        ])*1e-6
        n = np.array([
            4.116, 4.00668, 4.00637, 4.00743, 4.00609, 4.00582, 4.00556,
            4.00533, 4.00510, 4.00489, 4.00469, 4.00449, 4.00431, 4.00389,
            4.00351, 4.00316, 4.00285, 4.00255, 4.00228, 4.00202, 4.00177,
            4.00153
        ])
        fn = interp1d(lambn, n)
        lambk = np.array(
            [2.066, 10.0, 10.9, 12.0, 12.6, 13.1, 13.9, 14.5, 15.0])*1e-6
        k = np.array([
            6.58e-7, 1.43e-5, 1.30e-5, 3.82e-5, 3.51e-5, 4.59e-5, 3.98e-5,
            5.77e-5, 9.78e-5
        ])
        fk = interp1d(lambk, k)

    elif material == 'air':
        lambn = np.linspace(1, 20, 3)*1e-6
        n = np.ones(3)
        fn = interp1d(lambn, n)
        lambk = np.linspace(1, 20, 3)*1e-6
        k = np.zeros(3)
        fk = interp1d(lambk, k)

    else:
        print("undefined material")

    return (fn(wavelength) - 1j * fk(wavelength))**2


def epsilon_drude(metal, wavelength):
    o = 1. / wavelength
    if metal == 'Au':
        ot = 2.15e4
        op = 7.28e6
    elif metal == 'Cu':
        ot = 0.732e4
        op = 5.96e6
    elif metal == 'Al':
        ot = 6.6e4
        op = 11.9e6
    elif metal == 'Co':
        ot = 2.95e4
        op = 3.20e6
    elif metal == 'Fe':
        ot = 1.47e4
        op = 3.30e6
    elif metal == 'Pb':
        ot = 16.3e4
        op = 5.94e6
    elif metal == 'Mo':
        ot = 4.12e4
        op = 6.02e6
    elif metal == 'Ni':
        ot = 3.52e4
        op = 3.94e6
    elif metal == 'Pd':
        ot = 1.24e4
        op = 4.40e6
    elif metal == 'Pt':
        ot = 5.58e4
        op = 4.15e6
    elif metal == 'Ag':
        ot = 1.45e4
        op = 7.27e6
    elif metal == 'Ti':
        ot = 3.82e4
        op = 2.03e6
    elif metal == 'V':
        ot = 4.89e4
        op = 4.16e6
    elif metal == 'W':
        ot = 4.87e4
        op = 5.17e6
    elif metal == 'Cr':
        ot = 4.4e4
        op = 3.665e6
    else:
        print("undefined metal")

    return np.conj(1 - op**2 / (o**2 + 1j * o * ot))


def epsilon4(material, wavelength):
    if material in ['Si', 'a-Si', 'Ge', 'air']:
        return epsilon_IR(material, wavelength)
    else:
        return epsilon_drude(material, wavelength)
