#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# pytheas documentation build configuration file, created by
# sphinx-quickstart on Tue Jun  6 20:04:57 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))
# import sphinx_rtd_theme
import sys
import os
sys.path.insert(0, os.path.abspath('.'))
import sphinx_bootstrap_theme
from datetime import date
import sphinx_gallery
import pytheas
from parseless import LessVars, sphinxcol

# General information about the project.
project = pytheas.__name__
copyright = pytheas.__copyright__
author = pytheas.__author__


lessfile = "_custom/static/css/less/variables.less"
less = LessVars(lessfile)

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.napoleon",
    "sphinx.ext.autosummary",
    "sphinx.ext.doctest",
    "sphinx.ext.viewcode",
    "sphinx.ext.intersphinx",
    # 'sphinx.ext.todo',
    # 'sphinx.ext.coverage',
    "sphinx.ext.mathjax",
    "sphinx_gallery.gen_gallery",
    "sphinx.ext.autodoc",
    "sphinx_copybutton",
    # 'numpydoc',
    # 'sphinx_issues',
]


# this is needed for some reason...
# see https://github.com/numpy/numpydoc/issues/69
numpydoc_class_members_toctree = False

autodoc_default_options = {"members": True, "inherited-members": True}

autosummary_generate = True

sphinx_gallery_conf = {
    # path to your examples scripts
    "examples_dirs": "../examples",
    # path where to save gallery generated examples
    "gallery_dirs": "auto_examples",
    # directory where function granular galleries are stored
    "backreferences_dir": "gen_modules/backreferences",
    "default_thumb_file": "assets/icons/logo_pytheas.png",
    'download_all_examples': False,
    'show_memory': True,
    # Modules for which function level galleries are created.
    "doc_module": project,
    'binder': {'org': 'benvial',
           'repo': 'pytheas',
           'branch': 'gh-pages',
           'binderhub_url': 'https://mybinder.org',
           'dependencies': './binder/requirements.txt',
           'notebooks_dir': 'notebooks',
           'use_jupyter_lab': False,
           },
}


# # Napoleon settings
napoleon_google_docstring = True
napoleon_numpy_docstring = True
napoleon_include_init_with_doc = False
napoleon_include_private_with_doc = False
napoleon_include_special_with_doc = True
napoleon_use_admonition_for_examples = False
napoleon_use_admonition_for_notes = False
napoleon_use_admonition_for_references = False
napoleon_use_ivar = False
napoleon_use_param = True
napoleon_use_rtype = True


# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = ".rst"

# The master toctree document.
master_doc = "index"


html_context = {
    "description": pytheas.__description__,
    "show_gh_fork": True,
    "ghrepo": u"benvial/pytheas",
    "show_pip_install": True,
    "pipname": "pytheas-pip",
}


# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = pytheas.__version__
# The full version, including alpha/beta/rc tags.
release = pytheas.__version__  # + '-git'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ["_custom", "_build", "Thumbs.db", ".DS_Store"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "trac"

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#

html_theme = "bootstrap"
html_theme_path = sphinx_bootstrap_theme.get_html_theme_path()
html_static_path = ["_custom/static"]


def setup(app):
    app.add_stylesheet("css/theme.css")
    app.add_stylesheet("css/custom_styles.css")
    app.add_stylesheet("css/custom_gallery.css")
    app.add_stylesheet("css/custom_pygments.css")
    app.add_javascript("js/custom.js")


# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}
# Theme options are theme-specific and customize the look and feel of a
# theme further.
html_theme_options = {
    # Navigation bar title. (Default: ``project`` value)
    "navbar_title": project,
    # Tab name for entire site. (Default: "Site")
    "navbar_site_name": "Links",
    # A list of tuples containing pages or urls to link to.
    # Valid tuples should be in the following forms:
    #    (name, page)                 # a link to a page
    #    (name, "/aa/bb", 1)          # a link to an arbitrary relative url
    #    (name, "http://example.com", True) # arbitrary absolute url
    # Note the "1" or "True" value above as the third argument to indicate
    # an arbitrary url.
    "navbar_links": [
        ("Documentation", "./reference"),
        ("Examples", "./auto_examples/index"),
        # ("Link", "http://example.com", True),
    ],
    # Render the next and previous page links in navbar. (Default: true)
    "navbar_sidebarrel": False,
    # Render the current pages TOC in the navbar. (Default: true)
    "navbar_pagenav": False,
    # Tab name for the current pages TOC. (Default: "Page")
    "navbar_pagenav_name": "Page",
    # Global TOC depth for "site" navbar tab. (Default: 1)
    # Switching to -1 shows all levels.
    "globaltoc_depth": 1,
    # Include hidden TOCs in Site navbar?
    #
    # Note: If this is "false", you cannot have mixed ``:hidden:`` and
    # non-hidden ``toctree`` directives in the same page, or else the build
    # will break.
    #
    # Values: "true" (default) or "false"
    "globaltoc_includehidden": "true",
    # HTML navbar class (Default: "navbar") to attach to <div> element.
    # For black navbar, do "navbar navbar-inverse"
    "navbar_class": "navbar navbar-default",
    # Fix navigation bar to top of page?
    # Values: "true" (default) or "false"
    "navbar_fixed_top": "true",
    # Location of link to source.
    # Options are "nav" (default), "footer" or anything else to exclude.
    "source_link_position": "",
    # Bootswatch (http://bootswatch.com/) theme.
    #
    # Options are nothing (default) or the name of a valid theme
    # such as "cosmo" or "sandstone".
    #
    # The set of valid themes depend on the version of Bootstrap
    # that's used (the next config option).
    #
    # Currently, the supported themes are:
    # - Bootstrap 2: https://bootswatch.com/2
    # - Bootstrap 3: https://bootswatch.com/3
    "bootswatch_theme": "",
    # Choose Bootstrap version.
    # Values: "3" (default) or "2" (in quotes)
    "bootstrap_version": "3",
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']


# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
# html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
# html_short_title = "Demo"

# (Optional) Logo. Should be small enough to fit the navbar (ideally 24x24).
# Path should be relative to the ``_static`` files directory.
html_logo = "./assets/icons/logo_pytheas_white.png"

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
html_favicon = "./assets/icons/favicon.ico"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ["_static"]

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
# html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
# html_use_smartypants = True
# Custom sidebar templates, maps document names to template names.
# html_sidebars = {}
html_sidebars = {
    "auto_examples/index": ["localtoc.html"],
    "reference": ["localtoc.html"],
}
# html_sidebars = {'examples': ['localtoc.html']}
# Additional templates that should be rendered to pages, maps page names to
# template names.
# html_additional_pages = {}

# If false, no module index is generated.
# html_domain_indices = True

# If false, no index is generated.
# html_use_index = True

# If true, the index is split into individual pages for each letter.
# html_split_index = False

# If true, links to the reST sources are added to the pages.
# html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = False

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = project + "_doc"


# -- Options for LaTeX output ---------------------------------------------

latex_engine = 'xelatex'
latex_logo = "assets/icons/logo_pytheas.png"
latex_use_xindy = False
# latex_toplevel_sectioning = 'section'

TitleColor = less.latex_code("TitleColor", "brand-primary")
InnerLinkColor = less.latex_code("InnerLinkColor", "brand-danger")
OuterLinkColor = less.latex_code("OuterLinkColor", "brand-danger")
VerbatimColor = sphinxcol("VerbatimColor", (0.95, 0.95, 0.95))
noteBorderColor = sphinxcol("noteBorderColor", (0.8, 0.8, 0.8))
gray_base = less.fmtvar("gray-base")

sphinxsetup = [TitleColor, InnerLinkColor, OuterLinkColor, VerbatimColor, noteBorderColor]

sphinxsetup.append("verbatimwithframe=false")
sphinxsetup = ",".join(sphinxsetup)


fontpkg = r"""
\usepackage{cmbright}
\PassOptionsToPackage{no-math}{fontspec}
\setmainfont[Path = ../../assets/fonts/Saira/,
    UprightFont = *-Regular,
    BoldFont = *-Bold,
    ItalicFont = *-Italic,
    BoldItalicFont = *-BoldItalic,
    Kerning=On,Mapping=tex-text]{Saira.ttf}
\setsansfont[Path = ../../assets/fonts/PT_Sans/,
    UprightFont = *-Regular,
    BoldFont = *-Bold,
    ItalicFont = *-Italic,
    BoldItalicFont = *-BoldItalic,
    BoldFont = *-Bold]{PTSans.ttf}
\setmonofont[Path = ../../assets/fonts/IosevkaTerm/,
    UprightFont = *-regular,
    BoldFont = *-bold,
    ItalicFont = *-italic,
    BoldItalicFont = *-bolditalic,
    BoldFont = *-bold]{iosevka-term.ttf}

\usepackage[italic]{mathastext}
\usepackage{isomath}
"""

fncychap ='\\usepackage[Bjornstrup]{fncychap}'



chap = r"""
\renewcommand*{\arraystretch}{1.4}
\setlength{\fboxsep}{10pt}
\makeatletter
\ChNameVar{\raggedleft\Large\rm}
\ChNumVar{\raggedleft\bfseries\Huge\rm}
\ChTitleVar{\color{TitleColor}\raggedleft\sffamily\bfseries\Huge}
\ChRuleWidth{2pt}
\ChNameUpperCase
\renewcommand{\DOCH}{
    \setlength{\fboxsep}{20pt}
    \setlength{\fboxrule}{0pt}
    \raggedleft

\fcolorbox{gray_base}{gray_base}{\color{white}\CNoV\thechapter}\par\nobreak
\vskip 10\p@}
\renewcommand{\DOTI}[1]{\CTV\FmTi{#1}\par\nobreak\vskip 40\p@}
\renewcommand{\DOTIS}[1]{\CTV\FmTi{#1}\par\nobreak\vskip 40\p@}
\makeatother
"""

preamble= r"""
\usepackage{colortbl}
\arrayrulecolor{sphinxnoteBorderColor}
\makeatletter
\newcommand{\globalcolor}[1]{%
  \color{#1}\global\let\default@color\current@color
}
\makeatother

\AtBeginDocument{\globalcolor{gray_base}}

"""
#
# \usepackage[titles]{tocloft}
# \cftsetpnumwidth {1.25cm}\cftsetrmarg{1.5cm}
# \setlength{\cftchapnumwidth}{0.75cm}
# \setlength{\cftsecindent}{\cftchapnumwidth}
# \setlength{\cftsecnumwidth}{1.25cm}



headers = r"""
\usepackage{ fancyhdr}
\makeatletter

\let\oldheadrule\headrule% Copy \headrule into \oldheadrule
\renewcommand{\headrule}{\color{sphinxnoteBorderColor}\oldheadrule}% Add colour to \headrule
\renewcommand{\headrulewidth}{0.5pt}
\let\oldfootrule\footrule
\renewcommand{\footrule}{\color{sphinxnoteBorderColor}\oldfootrule}
\renewcommand{\footrulewidth}{0.5pt}
   \fancypagestyle{normal}{
    \fancyhf{}
   % FIXME: this presupposes "twoside".
   % If "oneside" class option, there are warnings in LaTeX log.
    \fancyfoot[LE,RO]{{\color{headfootColor}\py@HeaderFamily\thepage}}
    \fancyfoot[LO]{{\color{headfootColor}\py@HeaderFamily\nouppercase{\rightmark}}}
    \fancyfoot[RE]{{\color{headfootColor}\py@HeaderFamily\nouppercase{\leftmark}}}
    \fancyhead[LE,RO]{{\color{headfootColor}\py@HeaderFamily \@title\sphinxheadercomma\py@release}}
    \renewcommand{\headrulewidth}{0.4pt}
    \renewcommand{\footrulewidth}{0.4pt}
    }

   \fancypagestyle{plain}{
    \fancyhf{}
    \fancyfoot[LE,RO]{{\color{headfootColor}\py@HeaderFamily\thepage}}
    \renewcommand{\headrulewidth}{0pt}
    \renewcommand{\footrulewidth}{0.4pt}
    }

\makeatother
"""


title=r"""
\makeatletter
\renewcommand{\sphinxmaketitle}{%
  \let\sphinxrestorepageanchorsetting\relax
  \ifHy@pageanchor\def\sphinxrestorepageanchorsetting{\Hy@pageanchortrue}\fi
  \hypersetup{pageanchor=false}% avoid duplicate destination warnings
  \begin{titlepage}%
    \let\footnotesize\small
    \let\footnoterule\relax
      \begingroup % for PDF information dictionary
       \def\endgraf{ }\def\and{\& }%
       \pdfstringdefDisableCommands{\def\\{, }}% overwrite hyperref setup
       \hypersetup{pdfauthor={\@author}, pdftitle={\@title}}%
      \endgroup
    \begin{flushright}%
      \sphinxlogo
      \py@HeaderFamily
      {\color{TitleColor}\Huge \@title \par}
      {\itshape\LARGE \py@release\releaseinfo \par}
      \vfill
      {\LARGE
        \begin{tabular}[t]{c}
          \@author
        \end{tabular}\kern-\tabcolsep
        \par}
      \vfill\vfill
      {\large
       \@date \par
       \vfill
       \py@authoraddress \par
      }%
    \end{flushright}%\par
    \@thanks
  \end{titlepage}%
  \setcounter{footnote}{0}%
  \let\thanks\relax\let\maketitle\relax
  %\gdef\@thanks{}\gdef\@author{}\gdef\@title{}
  \clearpage
  \ifdefined\sphinxbackoftitlepage\sphinxbackoftitlepage\fi
  \if@openright\cleardoublepage\else\clearpage\fi
  \sphinxrestorepageanchorsetting
}
\makeatother
"""

def definecolor(name, rgbvals):
    return "\definecolor{{{}}}".format(name) + "{rgb}" + "{{{},{},{}}}".format(*rgbvals)


gray_base_ = definecolor("gray_base", gray_base)
headfootColor = definecolor("headfootColor", (0.7, 0.7, 0.7))

preamble += chap  + gray_base_ + headfootColor  + headers + title

latex_elements = {
    "transition":"",
    "preamble": preamble,
    "sphinxsetup": sphinxsetup,
    "fontpkg": fontpkg,
    "fncychap": fncychap,
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, project + ".tex", project + " Documentation", author, "manual")
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, project, project + " Documentation", [author], 1)]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        project,
        project + " Documentation",
        author,
        project,
        pytheas.__description__,
        "Science/Engineering",
    )
]


# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {"https://docs.python.org/": None}
