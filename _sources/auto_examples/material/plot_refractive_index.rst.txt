.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_material_plot_refractive_index.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_material_plot_refractive_index.py:


Importing refractive index from a database
==========================================

Retrieve and plot the refractive index of a material in the refractiveindex.info
data.



.. code-block:: python


    # Code source: Benjamin Vial
    # License: MIT

    from pytheas.material.refractiveindex import *
    from pytheas.tools.plottools import *







We can get the refractive index from tabulated data or a formula using the
database in the :py:mod:`pytheas.material` module.
We will import the measured data from the reference `Johnson and Christy`_ [JC1972]_.
We first specify the file :code:`yamlFile` we want to import:



.. code-block:: python


    yamlFile = "main/Au/Johnson.yml"








We then get the wavelength bounds from the data (in microns) and create a
wavelength range to interpolate:



.. code-block:: python


    bounds = getRange(yamlFile)
    lambdas = np.linspace(bounds[0], bounds[1], 300)







Then get the refractive index data:



.. code-block:: python


    ncomplex = get_complex_index(lambdas, yamlFile)
    epsilon = (ncomplex**2)







And finally plot it:



.. code-block:: python


    plt.close('all')
    fig, ax = plt.subplots(1, figsize=(6, 4))
    plt.plot(lambdas, epsilon.real, 'r-', label=r'Re($\varepsilon$)')
    plt.plot(lambdas, epsilon.imag, 'b--', label=r'Im($\varepsilon$)')
    plt.xlabel(r'$\lambda$ ($\mu m$)')
    plt.title("complex permittivity from " + yamlFile[5:][:-4])
    plt.legend(loc=0)
    plt.show()





.. image:: /auto_examples/material/images/sphx_glr_plot_refractive_index_001.png
    :class: sphx-glr-single-img




.. [JC1972]
         (P. B. Johnson and R. W. Christy. Optical constants of the noble
          metals, Phys. Rev. B 6, 4370-4379 (1972)).
.. _`Johnson and Christy`:
    https://doi.org/10.1103/PhysRevB.6.4370


**Total running time of the script:** ( 0 minutes  1.985 seconds)


.. _sphx_glr_download_auto_examples_material_plot_refractive_index.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_refractive_index.py <plot_refractive_index.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_refractive_index.ipynb <plot_refractive_index.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
